# Akkatecture Master CI CD pipeline definition
# This definition is responsible for building and testing
# the project in the master branch. It pushes package
# artefacts to a private nuget feed as pre-release packages.

trigger:
  branches:
    include:
    - master

pr: none

variables:
  majorVersion: '0'
  minorVersion: '4'
  patchVersion: '3'
  feedVersion: 'prerelease'
  dayOfYear: $(DayOfYear)
  revision: $(Rev:r)

name: ${{ format('{0}.{1}.{2}-{3}-{4}{5}', variables.majorVersion, variables.minorVersion, variables.patchVersion, variables.feedVersion, variables.dayOfYear, variables.revision) }}

jobs:
  - job: Build
    pool:
      vmImage: 'Ubuntu 16.04'
    variables:
      buildConfiguration: 'Release'

    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Restore [Akkatecture]'
      inputs:
        command: 'restore'
        projects: 'Akkatecture.sln'

    - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
      displayName: 'Prepare Analysis [Akkatecture]'
      inputs:
        SonarCloud: Akkatecture
        organization: 'lutando-github'
        projectKey: Lutando_Akkatecture
        projectName: Akkatecture
        projectVersion: $(Build.BuildNumber)
        extraProperties: |
          sonar.organization=lutando-github
          sonar.branch.name=$(Build.SourceBranchName)

    - task: DotNetCoreCLI@2
      displayName: 'Build [Akkatecture]'
      inputs:
        command: 'build'
        projects: 'Akkatecture.sln'
        arguments: '/p:Version=$(Build.BuildNumber) --configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Test [Akkatecture.Tests]'
      inputs:
        command: 'test'
        configuration: $(BuildConfiguration)
        arguments: '/p:CollectCoverage=true'
        projects: 'test/Akkatecture.Tests/Akkatecture.Tests.csproj'
        publishTestResults: true

    - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
      displayName: 'Run Analysis [Akkatecture]'

    - task: DotNetCoreCLI@2
      displayName: 'Push [Akkatecture]'
      inputs:
        command: 'push'
        packagesToPush: ${{ format('src/Akkatecture/bin/{0}/*.nupkg', variables.buildConfiguration) }}
        nuGetFeedType: 'internal'
        publishVstsFeed: 'akkatecture'

    - task: DotNetCoreCLI@2
      displayName: 'Push [Akkatecture.Cluster]'
      inputs:
        command: 'push'
        packagesToPush: ${{ format('src/Akkatecture.Clustering/bin/{0}/*.nupkg', variables.buildConfiguration) }}
        nuGetFeedType: 'internal'
        publishVstsFeed: 'akkatecture'